# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - '*'
    exclude:
    - main

pool:
  vmImage: ubuntu-latest

variables:
  AZURE_OPENAI_KEY: $(OpenAI_API_Key)  
  AZURE_OPENAI_ENDPOINT: "https://<your-openai-endpoint>.azure.openai.azure.com/"
  AZURE_OPENAI_MODEL: "gpt-4"
  # SonarQube configuration
  SONARQUBE_URL: 'https://sonarcloud.io'
  SONARQUBE_PROJECT_KEY: 'ncrane3d_GM-Financial-AI-Pipeline'
  SONARQUBE_PROJECT_NAME: 'GM-Financial-AI-Pipeline'
  SONARQUBE_TOKEN: $(c2ecd163b60b777543929403d936fc06409f060a)  
  SONARQUBE_REPORT_PATH: '$(Build.ArtifactStagingDirectory)/sonar-report.txt' 

steps:
- checkout: self
  fetchDepth: 1

# Run Build or Test (if needed for analysis?)
- script: |
    echo "Building the project..."
    ./mvnw spring-boot:run 
  displayName: 'Build Project'

# Run SonarCloud analysis 
- task: SonarCloudAnalyze@3
  inputs:
    jdkversion: 'JAVA_HOME'

# Generate and Save the SonarCloud Report to a File
- script: |
    echo "Fetching SonarCloud analysis report..."
    curl -u $(SONARCLOUD_TOKEN): $SONARCLOUD_URL/api/issues/search?componentKeys=$(SONARCLOUD_PROJECT_KEY) > $(SONARCLOUD_REPORT_PATH)
    echo "SonarCloud analysis report saved to $(SONARCLOUD_REPORT_PATH)"
  displayName: 'Save SonarCloud Report'

# Publish the SonarCloud Report as an Artifact (Optional)
- publish: $(SONARCLOUD_REPORT_PATH)
  artifact: sonar-report
  displayName: 'Publish SonarCloud Report Artifact'

- script: |
    echo "Invoking Azure OpenAI GPT Model..."

    # Set the environment variables
    export AZURE_OPENAI_KEY=$(8eqfFIZqAAoiAIuz0Cw8f0fWrw3FcFRfJBx3yBUYsYG32bZLaKyNJQQJ99BCACHYHv6XJ3w3AAAAACOGTLxJ)
    export AZURE_OPENAI_ENDPOINT=$(https://ai-ncrane3d0319ai135506223579.openai.azure.com/openai/deployments/gpt-4/chat/completions?api-version=2025-01-01-preview)
    export AZURE_OPENAI_MODEL=$(gpt-4)

    # Example prompt to GPT-4
    RESPONSE=$(curl -X POST "$AZURE_OPENAI_ENDPOINT/openai/deployments/$AZURE_OPENAI_MODEL/completions?api-version=2023-03-15-preview" \
      -H "Content-Type: application/json" \
      -H "Authorization: Bearer $AZURE_OPENAI_KEY" \
      -d '{
        "prompt": "Hello, GPT! What is the capital of Colorado?",
        "max_tokens": 100
      }')

    echo "Response from GPT: $RESPONSE"
  displayName: 'Invoke GPT-4 with Azure OpenAI'

# 6. Post-deployment tasks (Optional)
- script: |
    echo "Pipeline complete! You can now visit your deployed application."
  displayName: 'Post-deployment'


